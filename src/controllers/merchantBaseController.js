// src/controllers/merchantBaseController.js
/**
 * –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å –æ–±—â–∏–º–∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
 * –°–æ–¥–µ—Ä–∂–∏—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö merchant-–º–æ–¥–µ–ª–µ–π
 */
export class MerchantBaseController {
    constructor(Model, modelName, associations = {}) {
        this.Model = Model;
        this.modelName = modelName;
        this.associations = associations; // { include: [...], attributes: [...] }
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Å—É—Ä—Å
     */
    create = async (req, res) => {
        try {
            const user = req.authenticatedUser;
            const createData = this.prepareCreateData(req.body, user);

            if (!this.validateCreateData(createData)) {
                return res.status(400).json({
                    success: false,
                    error: `Invalid data for ${this.modelName.toLowerCase()}`
                });
            }

            const resource = await this.Model.create(createData);

            console.log(`‚úÖ ${this.modelName} created:`, resource.id, 'by user:', user.sol_wallet.slice(0, 8) + '...');

            res.json({
                success: true,
                data: this.formatResource(resource)
            });

        } catch (error) {
            console.error(`‚ùå Create ${this.modelName} error:`, error);
            res.status(500).json({
                success: false,
                error: 'Server error'
            });
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    getList = async (req, res) => {
        try {
            const user = req.authenticatedUser;
            const whereCondition = this.buildWhereCondition(req, user);

            const resources = await this.Model.findAll({
                where: whereCondition,
                include: this.associations.include || [],
                order: [['created_at', 'DESC']],
                attributes: this.associations.attributes
            });

            console.log(`üìä Retrieved ${resources.length} ${this.modelName.toLowerCase()}s for user:`, user.sol_wallet.slice(0, 8) + '...');

            res.json({
                success: true,
                data: resources.map(resource => this.formatResource(resource))
            });

        } catch (error) {
            console.error(`‚ùå Get ${this.modelName}s error:`, error);
            res.status(500).json({
                success: false,
                error: 'Server error'
            });
        }
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ—Å—É—Ä—Å
     */
    update = async (req, res) => {
        try {
            const resource = req.authorizedResource;
            const updateData = this.prepareUpdateData(req.body);

            if (!this.validateUpdateData(updateData)) {
                return res.status(400).json({
                    success: false,
                    error: `Invalid data for ${this.modelName.toLowerCase()}`
                });
            }

            await resource.update(updateData);

            console.log(`‚úÖ ${this.modelName} updated:`, resource.id);

            res.json({
                success: true,
                data: this.formatResource(resource)
            });

        } catch (error) {
            console.error(`‚ùå Update ${this.modelName} error:`, error);
            res.status(500).json({
                success: false,
                error: 'Server error'
            });
        }
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å —Ä–µ—Å—É—Ä—Å (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)
     */
    delete = async (req, res) => {
        try {
            const resource = req.authorizedResource;

            // –ú—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ - –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å
            await resource.update({ is_active: false });

            // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—á–µ—Ä–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã, –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏—Ö —Ç–æ–∂–µ
            await this.deactivateChildResources(resource);

            console.log(`üóëÔ∏è ${this.modelName} deleted:`, resource.id);

            res.json({
                success: true,
                message: `${this.modelName} deleted successfully`
            });

        } catch (error) {
            console.error(`‚ùå Delete ${this.modelName} error:`, error);
            res.status(500).json({
                success: false,
                error: 'Server error'
            });
        }
    }

    // ===== –ú–µ—Ç–æ–¥—ã –¥–ª—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö =====

    /**
     * –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    prepareCreateData(body, user) {
        return {
            user_id: user.id,
            ...body
        };
    }

    /**
     * –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    prepareUpdateData(body) {
        return body;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    validateCreateData(data) {
        return true;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    validateUpdateData(data) {
        return true;
    }

    /**
     * –ü–æ—Å—Ç—Ä–æ–∏—Ç—å WHERE —É—Å–ª–æ–≤–∏–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    buildWhereCondition(req, user) {
        return {
            user_id: user.id,
            is_active: true
        };
    }

    /**
     * –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –¥–æ—á–µ—Ä–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    async deactivateChildResources(resource) {
        // –ë–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        return Promise.resolve();
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    formatResource(resource) {
        const plain = resource.get ? resource.get({ plain: true }) : resource;

        return {
            id: plain.id,
            name: plain.name,
            createdAt: plain.created_at,
            updatedAt: plain.updated_at,
            ...this.getAdditionalFields(plain)
        };
    }

    /**
     * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö)
     */
    getAdditionalFields(resource) {
        return {};
    }
}